{"ast":null,"code":"import _classCallCheck from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/news-parser/src/containers/Router.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nvar Router =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Router, _React$Component);\n\n  function Router() {\n    _classCallCheck(this, Router);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Router).apply(this, arguments));\n  }\n\n  _createClass(Router, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return Router;\n}(React.Component);\n\nexport default connect()(Router);","map":{"version":3,"sources":["/var/www/html/news-parser/src/containers/Router.js"],"names":["React","connect","Router","props","children","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,M;;;;;;;;;;;;;6BAEK;AACJ,aACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,KAAL,CAAWC,QADhB,CADL;AAKH;;;;EARiBJ,KAAK,CAACK,S;;AAW3B,eAAeJ,OAAO,GAAGC,MAAH,CAAtB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\nclass Router extends React.Component{\n\n   render(){\n       return (\n            <div>\n                {this.props.children}\n            </div>\n       );\n   } \n}\n\nexport default connect()(Router); "]},"metadata":{},"sourceType":"module"}