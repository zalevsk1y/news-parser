{"ast":null,"code":"import _classCallCheck from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/news-parser/src/containers/Posts.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nvar Posts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Posts, _React$Component);\n\n  function Posts() {\n    _classCallCheck(this, Posts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Posts).apply(this, arguments));\n  }\n\n  _createClass(Posts, [{\n    key: \"pagination\",\n    value: function pagination(postsPerRow) {\n      var posts = this.props.posts,\n          postsRaw = posts.map(function (post, key) {\n        return React.createElement(\"div\", {\n          className: \"post-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"post-time\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"fo fo-clock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"post-time-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, post.pubDate)), React.createElement(\"div\", {\n          className: \"post-image-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"img-post-link\",\n          href: post.link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: \"\",\n          className: \"post-image\",\n          src: post.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"post-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"post-title-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"title-post-link\",\n          href: post.link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"post-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, post.title))), React.createElement(\"div\", {\n          className: \"post-description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, post.description))), React.createElement(\"div\", {\n          className: \"footer-post\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"fo fo-download\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"fo fo-edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        })));\n      });\n      var postsLength = postsRaw.length - 1,\n          pointer = postsPerRow - 1 <= postsLength ? postsPerRow - 1 : postsLength,\n          postsCache = [];\n      return postsRaw.filter(function (post, key) {\n        postsCache.push(post);\n\n        if (pointer === key) {\n          var row = postsCache;\n          pointer = postsLength >= pointer + postsPerRow - 1 ? +(postsPerRow - 1) : postsLength;\n          return React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, row);\n        }\n      });\n    }\n  }, {\n    key: \"posts\",\n    value: function posts() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(this.posts, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Posts;\n}(React.Component);\n\nexport default Posts;","map":{"version":3,"sources":["/var/www/html/news-parser/src/containers/Posts.js"],"names":["React","connect","Posts","postsPerRow","posts","props","postsRaw","map","post","key","pubDate","link","image","title","description","postsLength","length","pointer","postsCache","filter","push","row","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\nclass Posts extends React.Component{\n    pagination(postsPerRow){\n        const posts=this.props.posts,\n              postsRaw=posts.map((post,key)=>{\n                    return (\n                        <div className=\"post-container\">\n                                    <div className=\"post-time\">\n                                        <span className=\"fo fo-clock\"></span>\n                                        <span className=\"post-time-header\">{post.pubDate}</span>\n                                    </div>\n                                    <div className=\"post-image-wrapper\">\n                                        <a\n                                            className=\"img-post-link\"\n                                            href={post.link}>\n                                            <img\n                                                alt=''\n                                                className=\"post-image\"\n                                                src={post.image}/></a>\n                                    </div>\n\n                                    <div className=\"post-content\">\n                                        <div className=\"post-title-wrapper\">\n                                            <a\n                                                className=\"title-post-link\"\n                                                href={post.link}>\n                                                <span className=\"post-title\">{post.title}</span>\n                                            </a>\n                                        </div>\n\n                                        <div className=\"post-description\">\n                                            <span>{post.description}</span>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"footer-post\">\n                                        <span className=\"fo fo-download\"></span>\n                                        <span className=\"fo fo-edit\"></span>\n\n                                    </div>\n                            </div>\n                            \n                    )\n                });\n        let postsLength=postsRaw.length-1,\n            pointer=(postsPerRow-1)<=postsLength?(postsPerRow-1):postsLength,\n            postsCache=[];\n    \n        return postsRaw.filter((post,key) => {\n            postsCache.push(post);\n            if(pointer===key){\n                const row=postsCache;\n                pointer=postsLength>=(pointer+postsPerRow-1)?+(postsPerRow-1):postsLength;\n                return (\n                    <div className='row'>{row}</div>\n                )\n            }\n        });\n    }\n    posts (){\n        \n}\nrender(){\n    return (\n        <div className=\"result\">\n        <this.posts />\n        </div>\n    )\n}\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}