{"ast":null,"code":"import _objectSpread from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nimport { REQUEST_POSTS_LIST, REQUEST_SINGLE_POST, RECEIVE_POSTS_LIST, RECEIVE_SINGLE_POST, SET_ROUTE } from '../actions/action';\nimport initState from './initState';\n\nfunction parse(state, action) {\n  state = {\n    isFetching: false,\n    url: undefined,\n    items: []\n  };\n\n  switch (action.name) {\n    case REQUEST_POSTS_LIST:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        url: action.url\n      });\n\n    case REQUEST_SINGLE_POST:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        url: action.url\n      });\n\n    case RECEIVE_POSTS_LIST:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        url: action.url,\n        items: {\n          type: 'list',\n          url: 'http://www.motor1.com/rss/news/all',\n          date: action.date,\n          error: action.posts.error,\n          message: action.posts.msg,\n          data: action.posts.data\n        }\n      });\n\n    case RECEIVE_SINGLE_POST:\n      return {};\n\n    default:\n      return {\n        isFetching: false,\n        url: false\n      };\n  }\n}\n\nfunction route(state, action) {\n  state = {\n    isFetching: false,\n    action: false,\n    url: false\n  };\n\n  if (action.type === SET_ROUTE) {\n    return _objectSpread({}, state, {\n      action: action.action,\n      url: action.url\n    });\n  } else {\n    return _objectSpread({}, state);\n  }\n}\n\nexport default combineReducers({\n  parse: parse,\n  route: route\n});","map":{"version":3,"sources":["/var/www/html/news-parser/src/reducers/reducers.js"],"names":["combineReducers","REQUEST_POSTS_LIST","REQUEST_SINGLE_POST","RECEIVE_POSTS_LIST","RECEIVE_SINGLE_POST","SET_ROUTE","initState","parse","state","action","isFetching","url","undefined","items","name","type","date","error","posts","message","msg","data","route"],"mappings":";AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,SACIC,kBADJ,EAEIC,mBAFJ,EAGIC,kBAHJ,EAIIC,mBAJJ,EAKIC,SALJ,QAMO,mBANP;AAOA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,KAAT,CAAgBC,KAAhB,EAAsBC,MAAtB,EAA6B;AACzBD,EAAAA,KAAK,GAAC;AACFE,IAAAA,UAAU,EAAC,KADT;AAEFC,IAAAA,GAAG,EAACC,SAFF;AAGFC,IAAAA,KAAK,EAAC;AAHJ,GAAN;;AAKA,UAAOJ,MAAM,CAACK,IAAd;AACI,SAAKb,kBAAL;AACI,+BAAWO,KAAX;AAAiBE,QAAAA,UAAU,EAAC,IAA5B;AAAiCC,QAAAA,GAAG,EAACF,MAAM,CAACE;AAA5C;;AACJ,SAAKT,mBAAL;AACI,+BAAWM,KAAX;AAAiBE,QAAAA,UAAU,EAAC,IAA5B;AAAiCC,QAAAA,GAAG,EAACF,MAAM,CAACE;AAA5C;;AACJ,SAAKR,kBAAL;AACI,+BAAWK,KAAX;AACIE,QAAAA,UAAU,EAAC,KADf;AAEIC,QAAAA,GAAG,EAACF,MAAM,CAACE,GAFf;AAGIE,QAAAA,KAAK,EAAC;AACFE,UAAAA,IAAI,EAAC,MADH;AAEFJ,UAAAA,GAAG,EAAC,oCAFF;AAGFK,UAAAA,IAAI,EAACP,MAAM,CAACO,IAHV;AAIFC,UAAAA,KAAK,EAACR,MAAM,CAACS,KAAP,CAAaD,KAJjB;AAKFE,UAAAA,OAAO,EAACV,MAAM,CAACS,KAAP,CAAaE,GALnB;AAMFC,UAAAA,IAAI,EAACZ,MAAM,CAACS,KAAP,CAAaG;AANhB;AAHV;;AAYJ,SAAKjB,mBAAL;AACI,aAAO,EAAP;;AACJ;AACI,aAAO;AACPM,QAAAA,UAAU,EAAC,KADJ;AAEPC,QAAAA,GAAG,EAAC;AAFG,OAAP;AArBR;AA0BH;;AACD,SAASW,KAAT,CAAed,KAAf,EAAqBC,MAArB,EAA4B;AACxBD,EAAAA,KAAK,GAAC;AACFE,IAAAA,UAAU,EAAC,KADT;AAEFD,IAAAA,MAAM,EAAC,KAFL;AAGFE,IAAAA,GAAG,EAAC;AAHF,GAAN;;AAKA,MAAGF,MAAM,CAACM,IAAP,KAAcV,SAAjB,EAA2B;AACvB,6BAAWG,KAAX;AAAiBC,MAAAA,MAAM,EAACA,MAAM,CAACA,MAA/B;AAAsCE,MAAAA,GAAG,EAACF,MAAM,CAACE;AAAjD;AACH,GAFD,MAEK;AACD,6BAAWH,KAAX;AACH;AACJ;;AAED,eAAeR,eAAe,CAAC;AAACO,EAAAA,KAAK,EAALA,KAAD;AAAOe,EAAAA,KAAK,EAALA;AAAP,CAAD,CAA9B","sourcesContent":["import {combineReducers} from 'redux';\nimport {\n    REQUEST_POSTS_LIST,\n    REQUEST_SINGLE_POST,\n    RECEIVE_POSTS_LIST,\n    RECEIVE_SINGLE_POST,\n    SET_ROUTE\n} from '../actions/action';\nimport initState from './initState';\n\nfunction parse (state,action){\n    state={\n        isFetching:false,\n        url:undefined,\n        items:[]\n    }\n    switch(action.name){\n        case REQUEST_POSTS_LIST:\n            return {...state,isFetching:true,url:action.url};\n        case REQUEST_SINGLE_POST:\n            return {...state,isFetching:true,url:action.url};\n        case RECEIVE_POSTS_LIST:\n            return {...state,\n                isFetching:false,\n                url:action.url,\n                items:{\n                    type:'list',\n                    url:'http://www.motor1.com/rss/news/all',\n                    date:action.date,\n                    error:action.posts.error,\n                    message:action.posts.msg,\n                    data:action.posts.data,\n                }\n            };\n        case RECEIVE_SINGLE_POST:\n            return {};\n        default: \n            return {\n            isFetching:false,\n            url:false\n        }\n    }\n}\nfunction route(state,action){\n    state={\n        isFetching:false,\n        action:false,\n        url:false,\n    }\n    if(action.type===SET_ROUTE){\n        return {...state,action:action.action,url:action.url}\n    }else{\n        return {...state}\n    }\n}\n\nexport default combineReducers({parse,route});"]},"metadata":{},"sourceType":"module"}