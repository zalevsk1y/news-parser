{"ast":null,"code":"import _classCallCheck from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/news-parser/src/components/Main.js\";\nimport React from 'react';\nimport Message from '../containers/Message';\nimport InputForm from '../containers/InputForm';\nimport Posts from '../containers/Posts';\nimport { connect } from 'react-redux';\nimport { requestPostsList } from '../actions/action';\nimport { requestPost } from '../actions/action';\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n\n    _this.init();\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"init\",\n    value: function init() {\n      if (!this.props.action && !this.props.url) return;\n      this.props.getDataFromServer(this.props.action, this.props.url);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"wrap wrap-parsing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"parsing-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Parse News\")), React.createElement(Message, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(InputForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(Posts, {\n        posts: this.props.posts,\n        row: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    action: state.route.action,\n    url: state.route.url\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getDataFromServer: function getDataFromServer(action, url) {\n      switch (action) {\n        case 'list':\n          dispatch(requestPostsList(url));\n          break;\n\n        case 'page':\n          dispatch(requestPost(url));\n          break;\n\n        default:\n          console.error('Invalid action: ' + action);\n      }\n    }\n  };\n}\n\nexport default connect()(Main);","map":{"version":3,"sources":["/var/www/html/news-parser/src/components/Main.js"],"names":["React","Message","InputForm","Posts","connect","requestPostsList","requestPost","Main","props","init","action","url","getDataFromServer","posts","Component","mapStateToProps","state","route","mapDispatchToProps","dispatch","console","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,QAA+B,mBAA/B;AACA,SAAQC,WAAR,QAA0B,mBAA1B;;IAEMC,I;;;;;AACF,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8EAAMA,KAAN;;AACA,UAAKC,IAAL;;AAFc;AAGjB;;;;2BACK;AACF,UAAG,CAAC,KAAKD,KAAL,CAAWE,MAAZ,IAAoB,CAAC,KAAKF,KAAL,CAAWG,GAAnC,EAAuC;AACvC,WAAKH,KAAL,CAAWI,iBAAX,CAA6B,KAAKJ,KAAL,CAAWE,MAAxC,EAA+C,KAAKF,KAAL,CAAWG,GAA1D;AACH;;;6BACQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,EAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAOI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWK,KAAzB;AAAgC,QAAA,GAAG,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADJ;AAaH;;;;EAvBcb,KAAK,CAACc,S;;AAyBzB,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAC3B,SAAM;AACFN,IAAAA,MAAM,EAACM,KAAK,CAACC,KAAN,CAAYP,MADjB;AAEFC,IAAAA,GAAG,EAACK,KAAK,CAACC,KAAN,CAAYN;AAFd,GAAN;AAIH;;AACD,SAASO,kBAAT,CAA4BC,QAA5B,EAAqC;AACjC,SAAM;AACFP,IAAAA,iBAAiB,EAAC,2BAACF,MAAD,EAAQC,GAAR,EAAc;AAC5B,cAAOD,MAAP;AACI,aAAK,MAAL;AACAS,UAAAA,QAAQ,CAACd,gBAAgB,CAACM,GAAD,CAAjB,CAAR;AACA;;AACA,aAAK,MAAL;AACAQ,UAAAA,QAAQ,CAAEb,WAAW,CAACK,GAAD,CAAb,CAAR;AACA;;AACA;AACAS,UAAAA,OAAO,CAACC,KAAR,CAAc,qBAAmBX,MAAjC;AARJ;AAWH;AAbC,GAAN;AAeH;;AACD,eAAeN,OAAO,GAAGG,IAAH,CAAtB","sourcesContent":["import React from 'react';\nimport Message from '../containers/Message';\nimport InputForm from '../containers/InputForm';\nimport Posts from '../containers/Posts';\nimport {connect} from 'react-redux';\nimport {requestPostsList} from '../actions/action';\nimport {requestPost} from '../actions/action';\n\nclass Main extends React.Component {\n    constructor(props){\n        super(props);\n        this.init();\n    }\n    init(){\n        if(!this.props.action&&!this.props.url)return;\n        this.props.getDataFromServer(this.props.action,this.props.url);\n    }\n    render() {\n        return (\n            <div className=\"wrap wrap-parsing\">\n                <div className=\"parsing-title\">\n                    <h1>Parse News</h1>\n                </div>\n      \n                <Message />\n                <InputForm />\n                <Posts posts={this.props.posts} row='3'/>\n          \n            </div>\n            \n        )\n    }\n}\nfunction mapStateToProps(state){\n    return{\n        action:state.route.action,\n        url:state.route.url\n    }\n}\nfunction mapDispatchToProps(dispatch){\n    return{\n        getDataFromServer:(action,url)=>{\n            switch(action){\n                case 'list':\n                dispatch(requestPostsList(url));\n                break;\n                case 'page':\n                dispatch (requestPost(url));\n                break;\n                default:\n                console.error('Invalid action: '+action);\n            }\n            \n        }\n    }\n}\nexport default connect()(Main);\n"]},"metadata":{},"sourceType":"module"}