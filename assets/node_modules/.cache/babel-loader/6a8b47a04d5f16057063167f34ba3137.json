{"ast":null,"code":"import _classCallCheck from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/news-parser/src/components/Post.js\";\nimport React from 'react';\nimport Image from './Image';\nimport { connect } from 'react-redux';\nimport { parsePost as parsePost_dev } from '../actions/action_dev';\nimport { parsePost as parsePost_prod } from '../actions/action';\nimport config from '../config';\n\nvar _parsePost = config.mode === 'production' ? parsePost_prod : parsePost_dev;\n\nvar Post =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Post, _React$Component);\n\n  function Post(props) {\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Post).call(this, props));\n    _this.footer = _this.footer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"footer\",\n    value: function footer(props) {\n      var className, onClick;\n\n      switch (props.status) {\n        case 'draft':\n          className = 'fo fo-preview';\n\n          onClick = function onClick(event) {\n            event.preventDefault();\n            var newWindow = window.open(event.target.href, '_blank');\n            newWindow.focus();\n          };\n\n          break;\n\n        case 'parsed':\n          className = 'fo fo-download';\n\n          onClick = function onClick() {\n            props.parsePost(props.link, props.postId);\n          };\n\n          break;\n\n        default:\n          console.error('Wrong post type: ' + props.status);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"footer-post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: className,\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"post-container \" + (this.props.status === \"draft\" ? \"post-parsed\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fo fo-clock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"post-time-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.props.pubDate)), React.createElement(\"div\", {\n        className: \"post-image-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"img-post-link\",\n        href: this.props.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Image, {\n        className: \"post-image\",\n        src: this.props.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"post-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-title-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"title-post-link\",\n        href: this.props.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"post-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.props.title))), React.createElement(\"div\", {\n        className: \"post-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.props.description))), React.createElement(this.footer, {\n        status: this.props.status,\n        parsePost: this.props.parsePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Post;\n}(React.Component);\n\nfunction mapStateToProps(state, props) {\n  return {\n    status: state.parse.items.data[props._id].status\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    parsePost: function parsePost(url, id) {\n      dispatch(_parsePost(dispatch, url, id));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);","map":{"version":3,"sources":["/var/www/html/news-parser/src/components/Post.js"],"names":["React","Image","connect","parsePost","parsePost_dev","parsePost_prod","config","mode","Post","props","footer","bind","className","onClick","status","event","preventDefault","newWindow","window","open","target","href","focus","link","postId","console","error","pubDate","image","title","description","Component","mapStateToProps","state","parse","items","data","_id","mapDispatchToProps","dispatch","url","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Image from './Image';\nimport {connect} from 'react-redux';\nimport {parsePost as parsePost_dev} from '../actions/action_dev';\nimport {parsePost as parsePost_prod} from '../actions/action';\nimport config from '../config';\nconst parsePost=config.mode==='production'?parsePost_prod:parsePost_dev;\n\nclass Post extends React.Component {\n    constructor(props){\n        super(props);\n        this.footer=this.footer.bind(this);\n    }\n    footer(props){\n        let className,onClick;\n        switch (props.status){\n            case 'draft':\n                className='fo fo-preview';\n                onClick=(event)=>{\n                    event.preventDefault();\n                    const newWindow=window.open(event.target.href,'_blank');\n                    newWindow.focus();}\n                \n                break;\n            case 'parsed':\n                className='fo fo-download';\n                onClick=()=>{props.parsePost(props.link,props.postId)}\n                break;\n            default:\n                console.error('Wrong post type: '+props.status)\n        }\n        return (\n            <div className=\"footer-post\">\n                <span className={className} onClick={onClick}></span>\n            </div>\n        )\n    }\n    render(){\n    return (\n        <div className={\"post-container \"+(this.props.status===\"draft\"?\"post-parsed\":\"\")}>\n            <div className=\"post-time\">\n                <span className=\"fo fo-clock\"></span>\n                <span className=\"post-time-header\">{this.props.pubDate}</span>\n            </div>\n            <div className=\"post-image-wrapper\">\n                <a\n                    className=\"img-post-link\"\n                    href={this.props.link}>\n                    <Image\n                        className=\"post-image\"\n                      \n                        src={this.props.image}\n                        />\n                </a>\n                </div>\n                {\n                    //<!--post-image-wrapper -->\n                }\n                <div className=\"post-content\">\n                    <div className=\"post-title-wrapper\">\n                        <a\n                            className=\"title-post-link\"\n                            href={this.props.link}>\n                            <span className=\"post-title\">{this.props.title}</span>\n                        </a>\n                    </div>\n                    {\n                        //<!--post-title-wrapper -->\n                    }\n                    <div className=\"post-description\">\n                        <span>{this.props.description}</span>\n                    </div>\n                </div>\n                <this.footer status={this.props.status} parsePost={this.props.parsePost}/>\n                {\n                    //<!-- post-content -->\n                }\n                \n            </div>\n    )}\n}\nfunction mapStateToProps(state,props){\n    return {\n        status:state.parse.items.data[props._id].status\n    }\n}\nfunction mapDispatchToProps(dispatch){\n    return {\n        parsePost:(url,id)=>{\n            dispatch(parsePost(dispatch,url,id))\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Post);"]},"metadata":{},"sourceType":"module"}