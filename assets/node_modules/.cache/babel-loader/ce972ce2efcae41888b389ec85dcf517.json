{"ast":null,"code":"import _objectSpread from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nimport { REQUEST_POSTS_LIST, REQUEST_SINGLE_POST, RECEIVE_POSTS_LIST, RECEIVE_SINGLE_POST, RECEIVE_ERROR, SET_ROUTE } from '../actions/action';\nimport initState from './initState';\n\nfunction parse(state, action) {\n  switch (action.type) {\n    case REQUEST_POSTS_LIST:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        url: action.url\n      });\n\n    case REQUEST_SINGLE_POST:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        url: action.url\n      });\n\n    case RECEIVE_POSTS_LIST:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        url: action.url,\n        error: action.posts.err,\n        message: action.posts.msg,\n        action: 'list',\n        items: {\n          type: 'list',\n          url: 'http://www.motor1.com/rss/news/all',\n          date: action.date,\n          data: action.posts.data.map(function (item, index) {\n            item._id = parseInt(index);\n            return item;\n          })\n        }\n      });\n\n    case RECEIVE_SINGLE_POST:\n      if (action.post.data._id) {\n        state.items.data[action.post.data._id].status = action.post.data.status;\n        state.items.data[action.post.data._id].postId = action.post.data.post_id;\n        state.items.data[action.post.data._id].editLink = action.post.data.link;\n      }\n\n      return _objectSpread({}, state, {\n        isFetching: false,\n        url: action.url,\n        time: Date.now(),\n        action: 'post',\n        message: action.post.msg,\n        error: action.post.err\n      });\n\n    case RECEIVE_ERROR:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        url: false,\n        time: Date.now(),\n        action: action.action,\n        message: action.post.msg,\n        error: action.post.error\n      });\n\n    default:\n      return {\n        isFetching: false,\n        url: false,\n        message: false,\n        error: 0,\n        items: {}\n      };\n  }\n}\n\nfunction route(state, action) {\n  state = {\n    isFetching: false,\n    action: false,\n    url: false\n  };\n\n  if (action.type === SET_ROUTE) {\n    return _objectSpread({}, state, {\n      action: action.action,\n      url: action.url\n    });\n  } else {\n    return _objectSpread({}, state);\n  }\n}\n\nexport default combineReducers({\n  parse: parse,\n  route: route\n});","map":{"version":3,"sources":["/var/www/html/news-parser/src/reducers/reducers.js"],"names":["combineReducers","REQUEST_POSTS_LIST","REQUEST_SINGLE_POST","RECEIVE_POSTS_LIST","RECEIVE_SINGLE_POST","RECEIVE_ERROR","SET_ROUTE","initState","parse","state","action","type","isFetching","url","error","posts","err","message","msg","items","date","data","map","item","index","_id","parseInt","post","status","postId","post_id","editLink","link","time","Date","now","route"],"mappings":"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","sourcesContent":["import {combineReducers} from 'redux';\nimport {\n    REQUEST_POSTS_LIST,\n    REQUEST_SINGLE_POST,\n    RECEIVE_POSTS_LIST,\n    RECEIVE_SINGLE_POST,\n    RECEIVE_ERROR,\n    SET_ROUTE\n} from '../actions/action';\nimport initState from './initState';\n\nfunction parse (state,action){\n\n    switch(action.type){\n        case REQUEST_POSTS_LIST:\n            return {...state,isFetching:true,url:action.url};\n        case REQUEST_SINGLE_POST:\n            return {...state,isFetching:true,url:action.url};\n        case RECEIVE_POSTS_LIST:\n            return {...state,\n                isFetching:false,\n                url:action.url,\n                error:action.posts.err,\n                message:action.posts.msg,\n                action:'list',\n                items:{\n                    type:'list',\n                    url:'http://www.motor1.com/rss/news/all',\n                    date:action.date,   \n                   \n                    data:action.posts.data.map((item,index)=>{\n                        item._id=parseInt(index);\n                        return item;\n                    }),\n                }\n            };\n        case RECEIVE_SINGLE_POST:\n            if(action.post.data._id){\n                state.items.data[action.post.data._id].status=action.post.data.status;\n                state.items.data[action.post.data._id].postId=action.post.data.post_id;\n                state.items.data[action.post.data._id].editLink=action.post.data.link;\n            }\n            return {...state,\n                isFetching:false,\n                url:action.url,\n                time:Date.now(),\n                action:'post',\n                message:action.post.msg,\n                error:action.post.err\n            };\n        case RECEIVE_ERROR:\n            return{...state,\n                isFetching:false,\n                url:false,\n                time:Date.now(),\n                action:action.action,\n                message:action.post.msg,\n                error:action.post.error\n            }\n        default: \n            return {\n            isFetching:false,\n            url:false,\n            message:false,\n            error:0,\n            items:{}\n        }\n    }\n}\nfunction route(state,action){\n    state={\n        isFetching:false,\n        action:false,\n        url:false,\n    }\n    if(action.type===SET_ROUTE){\n        return {...state,action:action.action,url:action.url}\n    }else{\n        return {...state}\n    }\n}\n\nexport default combineReducers({parse,route});"]},"metadata":{},"sourceType":"module"}