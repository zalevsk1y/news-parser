{"ast":null,"code":"import initialState from '../reducers/initState';\nexport var REQUEST_POSTS_LIST = 'REQUEST_POSTS_LIST';\nexport var REQUEST_SINGLE_POST = 'REQUEST_SINGLE_POST';\nexport var RECEIVE_POSTS_LIST = 'RECEIVE_POSTS_LIST';\nexport var RECEIVE_SINGLE_POST = 'RECEIVE_SINGLE_POST';\nexport var SET_ROUTE = 'SET_ROUTE';\nexport function requestPostsList(url) {\n  return {\n    type: REQUEST_POSTS_LIST,\n    url: url\n  };\n}\nexport function setRoute(params) {\n  return {\n    type: SET_ROUTE,\n    action: params.action || false,\n    url: params.url ? decodeURIComponent(params.url) : false\n  };\n}\nexport function requestPost(url) {\n  return {\n    type: REQUEST_SINGLE_POST,\n    url: url\n  };\n}\nexport function receivePostsList(url, posts) {\n  return {\n    type: RECEIVE_POSTS_LIST,\n    url: url,\n    posts: posts,\n    date: Date.now()\n  };\n}\nexport function receivePost(url, post) {\n  return {\n    type: RECEIVE_SINGLE_POST,\n    url: url,\n    post: post,\n    date: Date.now()\n  };\n}\nexport function fetchPostsList(dispatch, url) {\n  dispatch(requestPostsList(url));\n  return function (dispatch) {\n    return fetch('admin-ajax.php?action=parsing_get_list&url=' + encodeURIComponent(url), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json, error) {\n      if (!error) {\n        dispatch(receivePostsList(url, json));\n      } else {\n        console.error(error);\n      }\n    });\n  };\n}\nexport function parsePost(dispatch, url, id) {\n  dispatch(requestPost(url));\n  return function (dispatch) {\n    fetch('admin-ajax.php?action=parsing_api&url=' + encodeURIComponent(url), {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json, error) {\n      if (!error) {\n        json.data._id = id;\n        dispatch(receivePost(url, json));\n      } else {\n        console.error(error);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/var/www/html/news-parser/src/actions/action.js"],"names":["initialState","REQUEST_POSTS_LIST","REQUEST_SINGLE_POST","RECEIVE_POSTS_LIST","RECEIVE_SINGLE_POST","SET_ROUTE","requestPostsList","url","type","setRoute","params","action","decodeURIComponent","requestPost","receivePostsList","posts","date","Date","now","receivePost","post","fetchPostsList","dispatch","fetch","encodeURIComponent","method","headers","then","response","json","error","console","parsePost","id","data","_id"],"mappings":"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","sourcesContent":["import initialState from '../reducers/initState';\n\n\nexport const REQUEST_POSTS_LIST='REQUEST_POSTS_LIST';\nexport const REQUEST_SINGLE_POST='REQUEST_SINGLE_POST';\nexport const RECEIVE_POSTS_LIST='RECEIVE_POSTS_LIST';\nexport const RECEIVE_SINGLE_POST='RECEIVE_SINGLE_POST';\nexport const SET_ROUTE='SET_ROUTE';\n\nexport function requestPostsList (url){\n    return {\n        type:REQUEST_POSTS_LIST,\n        url:url\n    }\n}\nexport function setRoute(params){\n    return {\n        type:SET_ROUTE,\n        action:params.action||false,\n        url:params.url?decodeURIComponent(params.url):false\n    }\n}\nexport function requestPost (url) {\n    return {\n        type:REQUEST_SINGLE_POST,\n        url:url\n    }\n}\nexport function receivePostsList (url,posts) {\n    return {\n        type:RECEIVE_POSTS_LIST,\n        url:url,\n        posts:posts,\n        date:Date.now()\n    }\n}\nexport function receivePost(url,post){\n    return {\n        type:RECEIVE_SINGLE_POST,\n        url:url,\n        post,\n        date:Date.now()\n    }\n}\n\nexport function fetchPostsList(dispatch,url){\n    dispatch(requestPostsList(url))\n    return dispatch=>{\n        return fetch('admin-ajax.php?action=parsing_get_list&url='+encodeURIComponent(url),\n        {method: 'POST',\n         headers: {\n           'Accept': 'application/json',\n           'Content-Type': 'application/json'\n         }\n        })\n        .then(response=>response.json())\n        .then((json,error)=>{\n            if(!error){\n            dispatch(receivePostsList (url,json))\n            }else{\n                console.error(error);\n            }\n        })\n    }\n}\nexport function parsePost(dispatch,url,id){\n    dispatch(requestPost(url));\n    return dispatch=>{fetch ('admin-ajax.php?action=parsing_api&url='+encodeURIComponent(url),\n    {method: 'POST',\n     headers: {\n       'Accept': 'application/json',\n       'Content-Type': 'application/json'\n     }\n    })\n    .then(response=>response.json())\n    .then((json,error)=>{\n        if(!error){\n            json.data._id=id;\n            dispatch(receivePost(url,json));\n        }else{\n            console.error(error);\n        }\n    })}\n}\n"]},"metadata":{},"sourceType":"module"}