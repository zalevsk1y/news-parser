{"ast":null,"code":"import _classCallCheck from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/news-parser/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/news-parser/src/containers/Indicator.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nvar Indicator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Indicator, _React$Component);\n\n  function Indicator(props) {\n    var _this;\n\n    _classCallCheck(this, Indicator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Indicator).call(this, props));\n    _this.state = {\n      position: -90,\n      isFinish: true\n    };\n    _this.tick = _this.tick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.animation = _this.animation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Indicator, [{\n    key: \"tick\",\n    value: function tick() {\n      var oldPosition = this.state.position;\n      return {\n        position: oldPosition + this.props.step\n      };\n    }\n  }, {\n    key: \"animation\",\n    value: function animation() {\n      if (!this.props.isAnimate && !this.state.isFinish) {\n        this.setState({\n          position: -90,\n          isFinish: true\n        });\n        return;\n      } else if (this.props.isAnimate) {\n        this.setState(this.tick());\n        window.requestAnimationFrame(this.animation);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"span\", {\n        className: \"download-indicator animate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Indicator;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isAnimate: state.parse.isFetching\n  };\n}\n\nexport default connect(mapStateToProps)(Indicator);","map":{"version":3,"sources":["/var/www/html/news-parser/src/containers/Indicator.js"],"names":["React","connect","Indicator","props","state","position","isFinish","tick","bind","animation","oldPosition","step","isAnimate","setState","window","requestAnimationFrame","Component","mapStateToProps","parse","isFetching"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,S;;;;;AACF,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AAACC,MAAAA,QAAQ,EAAC,CAAC,EAAX;AAAcC,MAAAA,QAAQ,EAAC;AAAvB,KAAX;AACA,UAAKC,IAAL,GAAU,MAAKA,IAAL,CAAUC,IAAV,uDAAV;AACA,UAAKC,SAAL,GAAe,MAAKA,SAAL,CAAeD,IAAf,uDAAf;AAJc;AAMjB;;;;2BACK;AACF,UAAME,WAAW,GAAC,KAAKN,KAAL,CAAWC,QAA7B;AACA,aAAO;AAACA,QAAAA,QAAQ,EAACK,WAAW,GAAC,KAAKP,KAAL,CAAWQ;AAAjC,OAAP;AAEH;;;gCACU;AACP,UAAI,CAAC,KAAKR,KAAL,CAAWS,SAAZ,IAAuB,CAAC,KAAKR,KAAL,CAAWE,QAAvC,EAAgD;AAC5C,aAAKO,QAAL,CAAc;AAACR,UAAAA,QAAQ,EAAC,CAAC,EAAX;AAAcC,UAAAA,QAAQ,EAAC;AAAvB,SAAd;AACA;AACH,OAHD,MAGM,IAAG,KAAKH,KAAL,CAAWS,SAAd,EAAwB;AAC1B,aAAKC,QAAL,CAAc,KAAKN,IAAL,EAAd;AACAO,QAAAA,MAAM,CAACC,qBAAP,CAA6B,KAAKN,SAAlC;AACH;AACJ;;;6BACO;AACJ,aACI;AAAM,QAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EA1BmBT,KAAK,CAACgB,S;;AA4B9B,SAASC,eAAT,CAAyBb,KAAzB,EAA+B;AAC3B,SAAO;AACHQ,IAAAA,SAAS,EAACR,KAAK,CAACc,KAAN,CAAYC;AADnB,GAAP;AAGH;;AAED,eAAelB,OAAO,CAACgB,eAAD,CAAP,CAAyBf,SAAzB,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\nclass Indicator extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={position:-90,isFinish:true}\n        this.tick=this.tick.bind(this);\n        this.animation=this.animation.bind(this)\n\n    }\n    tick(){\n        const oldPosition=this.state.position;\n        return {position:oldPosition+this.props.step};\n        \n    }\n    animation(){\n        if (!this.props.isAnimate&&!this.state.isFinish){\n            this.setState({position:-90,isFinish:true})\n            return;\n        }else if(this.props.isAnimate){\n            this.setState(this.tick());\n            window.requestAnimationFrame(this.animation);\n        }\n    }\n    render(){\n        return (\n            <span className=\"download-indicator animate\"></span>\n        )\n    }  \n}\nfunction mapStateToProps(state){\n    return {\n        isAnimate:state.parse.isFetching\n    }\n}\n\nexport default connect(mapStateToProps)(Indicator)"]},"metadata":{},"sourceType":"module"}