'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function getFiber(element) {
  var container = global.document.createElement('div');
  var inst = null;

  var Tester = function (_React$Component) {
    _inherits(Tester, _React$Component);

    function Tester() {
      _classCallCheck(this, Tester);

      return _possibleConstructorReturn(this, (Tester.__proto__ || Object.getPrototypeOf(Tester)).apply(this, arguments));
    }

    _createClass(Tester, [{
      key: 'render',
      value: function () {
        function render() {
          inst = this;
          return element;
        }

        return render;
      }()
    }]);

    return Tester;
  }(_react2['default'].Component);

  _reactDom2['default'].render(_react2['default'].createElement(Tester), container);
  return inst._reactInternalFiber.child;
}

module.exports = function () {
  function detectFiberTags() {
    var supportsMode = typeof _react2['default'].StrictMode !== 'undefined';
    var supportsContext = typeof _react2['default'].createContext !== 'undefined';
    var supportsForwardRef = typeof _react2['default'].forwardRef !== 'undefined';
    var supportsMemo = typeof _react2['default'].memo !== 'undefined';
    var supportsProfiler = typeof _react2['default'].unstable_Profiler !== 'undefined';

    function Fn() {
      return null;
    }
    // eslint-disable-next-line react/prefer-stateless-function

    var Cls = function (_React$Component2) {
      _inherits(Cls, _React$Component2);

      function Cls() {
        _classCallCheck(this, Cls);

        return _possibleConstructorReturn(this, (Cls.__proto__ || Object.getPrototypeOf(Cls)).apply(this, arguments));
      }

      _createClass(Cls, [{
        key: 'render',
        value: function () {
          function render() {
            return null;
          }

          return render;
        }()
      }]);

      return Cls;
    }(_react2['default'].Component);

    var Ctx = null;
    var FwdRef = null;
    if (supportsContext) {
      Ctx = _react2['default'].createContext();
    }
    if (supportsForwardRef) {
      // React will warn if we don't have both arguments.
      // eslint-disable-next-line no-unused-vars
      FwdRef = _react2['default'].forwardRef(function (props, ref) {
        return null;
      });
    }

    return {
      HostRoot: getFiber('test')['return']['return'].tag, // Go two levels above to find the root
      ClassComponent: getFiber(_react2['default'].createElement(Cls)).tag,
      Fragment: getFiber([['nested']]).tag,
      FunctionalComponent: getFiber(_react2['default'].createElement(Fn)).tag,
      MemoSFC: supportsMemo ? getFiber(_react2['default'].createElement(_react2['default'].memo(Fn))).tag : -1,
      MemoClass: supportsMemo ? getFiber(_react2['default'].createElement(_react2['default'].memo(Cls))).tag : -1,
      HostPortal: getFiber(_reactDom2['default'].createPortal(null, global.document.createElement('div'))).tag,
      HostComponent: getFiber(_react2['default'].createElement('span')).tag,
      HostText: getFiber('text').tag,
      Mode: supportsMode ? getFiber(_react2['default'].createElement(_react2['default'].StrictMode)).tag : -1,
      ContextConsumer: supportsContext ? getFiber(_react2['default'].createElement(Ctx.Consumer, null, function () {
        return null;
      })).tag : -1,
      ContextProvider: supportsContext ? getFiber(_react2['default'].createElement(Ctx.Provider, { value: null }, null)).tag : -1,
      ForwardRef: supportsForwardRef ? getFiber(_react2['default'].createElement(FwdRef)).tag : -1,
      Profiler: supportsProfiler ? getFiber(_react2['default'].createElement(_react2['default'].unstable_Profiler, { id: 'mock', onRender: function () {
          function onRender() {}

          return onRender;
        }()
      })).tag : -1
    };
  }

  return detectFiberTags;
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9kZXRlY3RGaWJlclRhZ3MuanMiXSwibmFtZXMiOlsiZ2V0RmliZXIiLCJlbGVtZW50IiwiY29udGFpbmVyIiwiZ2xvYmFsIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiaW5zdCIsIlRlc3RlciIsIlJlYWN0IiwiQ29tcG9uZW50IiwiUmVhY3RET00iLCJyZW5kZXIiLCJfcmVhY3RJbnRlcm5hbEZpYmVyIiwiY2hpbGQiLCJtb2R1bGUiLCJleHBvcnRzIiwiZGV0ZWN0RmliZXJUYWdzIiwic3VwcG9ydHNNb2RlIiwiU3RyaWN0TW9kZSIsInN1cHBvcnRzQ29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJzdXBwb3J0c0ZvcndhcmRSZWYiLCJmb3J3YXJkUmVmIiwic3VwcG9ydHNNZW1vIiwibWVtbyIsInN1cHBvcnRzUHJvZmlsZXIiLCJ1bnN0YWJsZV9Qcm9maWxlciIsIkZuIiwiQ2xzIiwiQ3R4IiwiRndkUmVmIiwicHJvcHMiLCJyZWYiLCJIb3N0Um9vdCIsInRhZyIsIkNsYXNzQ29tcG9uZW50IiwiRnJhZ21lbnQiLCJGdW5jdGlvbmFsQ29tcG9uZW50IiwiTWVtb1NGQyIsIk1lbW9DbGFzcyIsIkhvc3RQb3J0YWwiLCJjcmVhdGVQb3J0YWwiLCJIb3N0Q29tcG9uZW50IiwiSG9zdFRleHQiLCJNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJQcm92aWRlciIsInZhbHVlIiwiRm9yd2FyZFJlZiIsIlByb2ZpbGVyIiwiaWQiLCJvblJlbmRlciJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUVBLFNBQVNBLFFBQVQsQ0FBa0JDLE9BQWxCLEVBQTJCO0FBQ3pCLE1BQU1DLFlBQVlDLE9BQU9DLFFBQVAsQ0FBZ0JDLGFBQWhCLENBQThCLEtBQTlCLENBQWxCO0FBQ0EsTUFBSUMsT0FBTyxJQUFYOztBQUZ5QixNQUduQkMsTUFIbUI7QUFBQTs7QUFBQTtBQUFB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QUFOO0FBQUEsT0FBeEMsQ0FBVCxFQUE4RFosR0FEakQsR0FFYixDQUFDLENBbkJBO0FBb0JMYSx1QkFBaUI1QixrQkFDYm5CLFNBQVNRLG1CQUFNSCxhQUFOLENBQW9Cd0IsSUFBSW1CLFFBQXhCLEVBQWtDLEVBQUVDLE9BQU8sSUFBVCxFQUFsQyxFQUFtRCxJQUFuRCxDQUFULEVBQW1FZixHQUR0RCxHQUViLENBQUMsQ0F0QkE7QUF1QkxnQixrQkFBWTdCLHFCQUNSckIsU0FBU1EsbUJBQU1ILGFBQU4sQ0FBb0J5QixNQUFwQixDQUFULEVBQXNDSSxHQUQ5QixHQUVSLENBQUMsQ0F6QkE7QUEwQkxpQixnQkFBVTFCLG1CQUNOekIsU0FBU1EsbUJBQU1ILGFBQU4sQ0FBb0JHLG1CQUFNa0IsaUJBQTFCLEVBQTZDLEVBQUUwQixJQUFJLE1BQU4sRUFBY0MsUUFBZDtBQUFBLDhCQUF5QixDQUFFOztBQUEzQjtBQUFBO0FBQUEsT0FBN0MsQ0FBVCxFQUFzRm5CLEdBRGhGLEdBRU4sQ0FBQztBQTVCQSxLQUFQO0FBOEJEOztBQXpERCxTQUEwQmxCLGVBQTFCO0FBQUEiLCJmaWxlIjoiZGV0ZWN0RmliZXJUYWdzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuXG5mdW5jdGlvbiBnZXRGaWJlcihlbGVtZW50KSB7XG4gIGNvbnN0IGNvbnRhaW5lciA9IGdsb2JhbC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgbGV0IGluc3QgPSBudWxsO1xuICBjbGFzcyBUZXN0ZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgIGluc3QgPSB0aGlzO1xuICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgfVxuICB9XG4gIFJlYWN0RE9NLnJlbmRlcihSZWFjdC5jcmVhdGVFbGVtZW50KFRlc3RlciksIGNvbnRhaW5lcik7XG4gIHJldHVybiBpbnN0Ll9yZWFjdEludGVybmFsRmliZXIuY2hpbGQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGV0ZWN0RmliZXJUYWdzKCkge1xuICBjb25zdCBzdXBwb3J0c01vZGUgPSB0eXBlb2YgUmVhY3QuU3RyaWN0TW9kZSAhPT0gJ3VuZGVmaW5lZCc7XG4gIGNvbnN0IHN1cHBvcnRzQ29udGV4dCA9IHR5cGVvZiBSZWFjdC5jcmVhdGVDb250ZXh0ICE9PSAndW5kZWZpbmVkJztcbiAgY29uc3Qgc3VwcG9ydHNGb3J3YXJkUmVmID0gdHlwZW9mIFJlYWN0LmZvcndhcmRSZWYgIT09ICd1bmRlZmluZWQnO1xuICBjb25zdCBzdXBwb3J0c01lbW8gPSB0eXBlb2YgUmVhY3QubWVtbyAhPT0gJ3VuZGVmaW5lZCc7XG4gIGNvbnN0IHN1cHBvcnRzUHJvZmlsZXIgPSB0eXBlb2YgUmVhY3QudW5zdGFibGVfUHJvZmlsZXIgIT09ICd1bmRlZmluZWQnO1xuXG4gIGZ1bmN0aW9uIEZuKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9wcmVmZXItc3RhdGVsZXNzLWZ1bmN0aW9uXG4gIGNsYXNzIENscyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG4gIGxldCBDdHggPSBudWxsO1xuICBsZXQgRndkUmVmID0gbnVsbDtcbiAgaWYgKHN1cHBvcnRzQ29udGV4dCkge1xuICAgIEN0eCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoKTtcbiAgfVxuICBpZiAoc3VwcG9ydHNGb3J3YXJkUmVmKSB7XG4gICAgLy8gUmVhY3Qgd2lsbCB3YXJuIGlmIHdlIGRvbid0IGhhdmUgYm90aCBhcmd1bWVudHMuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgRndkUmVmID0gUmVhY3QuZm9yd2FyZFJlZigocHJvcHMsIHJlZikgPT4gbnVsbCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIEhvc3RSb290OiBnZXRGaWJlcigndGVzdCcpLnJldHVybi5yZXR1cm4udGFnLCAvLyBHbyB0d28gbGV2ZWxzIGFib3ZlIHRvIGZpbmQgdGhlIHJvb3RcbiAgICBDbGFzc0NvbXBvbmVudDogZ2V0RmliZXIoUmVhY3QuY3JlYXRlRWxlbWVudChDbHMpKS50YWcsXG4gICAgRnJhZ21lbnQ6IGdldEZpYmVyKFtbJ25lc3RlZCddXSkudGFnLFxuICAgIEZ1bmN0aW9uYWxDb21wb25lbnQ6IGdldEZpYmVyKFJlYWN0LmNyZWF0ZUVsZW1lbnQoRm4pKS50YWcsXG4gICAgTWVtb1NGQzogc3VwcG9ydHNNZW1vXG4gICAgICA/IGdldEZpYmVyKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QubWVtbyhGbikpKS50YWdcbiAgICAgIDogLTEsXG4gICAgTWVtb0NsYXNzOiBzdXBwb3J0c01lbW9cbiAgICAgID8gZ2V0RmliZXIoUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdC5tZW1vKENscykpKS50YWdcbiAgICAgIDogLTEsXG4gICAgSG9zdFBvcnRhbDogZ2V0RmliZXIoUmVhY3RET00uY3JlYXRlUG9ydGFsKG51bGwsIGdsb2JhbC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSkpLnRhZyxcbiAgICBIb3N0Q29tcG9uZW50OiBnZXRGaWJlcihSZWFjdC5jcmVhdGVFbGVtZW50KCdzcGFuJykpLnRhZyxcbiAgICBIb3N0VGV4dDogZ2V0RmliZXIoJ3RleHQnKS50YWcsXG4gICAgTW9kZTogc3VwcG9ydHNNb2RlXG4gICAgICA/IGdldEZpYmVyKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuU3RyaWN0TW9kZSkpLnRhZ1xuICAgICAgOiAtMSxcbiAgICBDb250ZXh0Q29uc3VtZXI6IHN1cHBvcnRzQ29udGV4dFxuICAgICAgPyBnZXRGaWJlcihSZWFjdC5jcmVhdGVFbGVtZW50KEN0eC5Db25zdW1lciwgbnVsbCwgKCkgPT4gbnVsbCkpLnRhZ1xuICAgICAgOiAtMSxcbiAgICBDb250ZXh0UHJvdmlkZXI6IHN1cHBvcnRzQ29udGV4dFxuICAgICAgPyBnZXRGaWJlcihSZWFjdC5jcmVhdGVFbGVtZW50KEN0eC5Qcm92aWRlciwgeyB2YWx1ZTogbnVsbCB9LCBudWxsKSkudGFnXG4gICAgICA6IC0xLFxuICAgIEZvcndhcmRSZWY6IHN1cHBvcnRzRm9yd2FyZFJlZlxuICAgICAgPyBnZXRGaWJlcihSZWFjdC5jcmVhdGVFbGVtZW50KEZ3ZFJlZikpLnRhZ1xuICAgICAgOiAtMSxcbiAgICBQcm9maWxlcjogc3VwcG9ydHNQcm9maWxlclxuICAgICAgPyBnZXRGaWJlcihSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LnVuc3RhYmxlX1Byb2ZpbGVyLCB7IGlkOiAnbW9jaycsIG9uUmVuZGVyKCkge30gfSkpLnRhZ1xuICAgICAgOiAtMSxcbiAgfTtcbn07XG4iXX0=
//# sourceMappingURL=detectFiberTags.js.map